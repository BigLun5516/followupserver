
# 切换测试环境
 spring.profiles.active=test

# 应用名称
spring.application.name=followup-server-process

# 访问端口号
server.port=8020

# 编码格式
server.tomcat.uri-encoding=utf-8

# 数据库相关配置
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://101.132.192.66:3306/followup # aiwac
spring.datasource.url=jdbc:mysql://115.29.151.221:3306/followup
spring.datasource.username=followup
spring.datasource.password=Epic,2019
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5
spring.datasource.conneconnection-init-sqls=set names utf8mb4
# 自动更新表
spring.jpa.hibernate.ddl-auto=update
# 添加外键约束
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect

# session生命周期
server.servlet.session.timeout=30m

# 文件大小限制
server.tomcat.max-http-post-size=-1

spring.servlet.multipart.enabled = true
# Single file max size  即单个文件大小 50MB
spring.servlet.multipart.max-file-size = 52428800
# All files max size      即总上传的数据大小
spring.servlet.multipart.max-request-size = 52428800

# 日志配置
logging.config=classpath:log4j2.xml
# logging.level.org.springframework=INFO

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true


# mybatis配置 配置 mapper
#mybatis.config-location=classpath:mybatis/mybatis-config.xml
#mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

# 测试时禁用
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration

#springboot节省了大量的手动配置，当在执行项目的时候，application.properties会覆盖springboot默认的配置文件
#只需在application.properties中写一些需要自定义的配置，以键值对的方式存储，如果不写的话，springboot会执行默认的配置文件

#8020端口是开发环境，8013是测试环境，cdn.cmas2020.cn默认访问服务器程序的8020端口，此时用cdn.cmas2020.cn/ncov/getscale/即可访问到服务器中运行在8020端口的getscale接口
#用cdn-test.cmas2020.cn/ncov/getscale/即可访问到服务器中运行在8013(测试环境）端口的getscale接口
#springboot加载的程序即可用本机地址+端口号+路径名来访问，即cdn.cmas2020.cn（本机地址+端口号）+/ncov/getscale/




